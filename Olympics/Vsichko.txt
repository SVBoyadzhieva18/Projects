import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Olympiad olympiad = new Olympiad();
        Scanner sc = new Scanner(System.in);
        int option;

        while (true) {
            System.out.println("Select an option:");
            System.out.println("1. Add a student");
            System.out.println("2. Add a pupil");
            System.out.println("3. Show all data");
            System.out.println("4. Show student data by university and points");
            System.out.println("5. Get pupils by city");
            System.out.println("6. Remove pupil by grade");
            System.out.println("7. Remove student by university");
            System.out.println("8. Get participants by points");
            System.out.println("9. Exit");
            option = sc.nextInt();
            sc.nextLine();

            switch (option) {
                case 1:
                    System.out.print("Enter student name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter student EGN: ");
                    String egn = sc.nextLine();
                    System.out.print("Enter student university: ");
                    String university = sc.nextLine();
                    System.out.print("Enter student faculty: ");
                    String specialty = sc.nextLine();
                    System.out.print("Enter student points: ");
                    int points = sc.nextInt();
                    sc.nextLine();
                    olympiad.addStudent(name, egn, university, null, specialty, points);
                    System.out.println("Student added successfully.");
                    break;
                case 2:
                    System.out.print("Enter pupil name: ");
                    name = sc.nextLine();
                    System.out.print("Enter pupil EGN: ");
                    egn = sc.nextLine();
                    System.out.print("Enter pupil school: ");
                    String school = sc.nextLine();
                    System.out.print("Enter pupil grade: ");
                    String grade = sc.nextLine();
                    System.out.print("Enter pupil points: ");
                    points = sc.nextInt();
                    sc.nextLine();
                    olympiad.addPupil(name, egn, school, grade, points);
                    System.out.println("Pupil added successfully.");
                    break;
                case 3:
                    olympiad.showData();
                    break;
                case 4:
                    System.out.print("Enter university: ");
                    university = sc.nextLine();
                    System.out.print("Enter points: ");
                    points = sc.nextInt();
                    sc.nextLine();
                    olympiad.getStudentsByUniversityAndPoints(university, points);
                    break;
                case 5:
                    System.out.print("Enter city: ");
                    String city = sc.nextLine();
                    List<Pupil> pupils = olympiad.getPupilsByCity(city);
                    for (Pupil pupil : pupils) {
                        System.out.println(pupil);
                    }
                    break;
                case 6:
                    System.out.print("Enter grade: ");
                    grade = sc.nextLine();
                    olympiad.removePupilByGrade(grade);
                    System.out.println("Pupil removed successfully.");
                    break;
                case 7:
                    System.out.print("Enter university: ");
                    university = sc.nextLine();
                    olympiad.removeStudentByUniversity(university);
                    System.out.println("Student removed successfully.");
                    break;
                case 8:
                    System.out.print("Enter points: ");
                    points = sc.nextInt();
                    sc.nextLine();
                    List<Object> participants = olympiad.getParticipantsByPoints(points);
                    for (Object participant : participants) {
                        System.out.println(participant);
                    }
                    break;
                case 9:
                    System.out.println("Exiting program...");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}









import java.util.ArrayList;
import java.util.List;

class Olympiad {
    List<Student> students = new ArrayList<>();
    List<Pupil> pupils = new ArrayList<Pupil>();

    public void addStudent(Student student) {
        students.add(student);
    }

    public void addPupil(Pupil pupil) {
        pupils.add(pupil);
    }

    public void addParticipant(String name, String egn, String schoolOrUniversity, String gradeOrFaculty, String specialization, int points) {
        Object university = null;
        Object faculty = null;
        if (schoolOrUniversity != null && gradeOrFaculty != null) {
            Pupil pupil = new Pupil(name, egn, schoolOrUniversity, gradeOrFaculty, points);
            pupils.add(pupil);
        } else if (university != null && faculty != null && specialization != null) {
            Student student = new Student(name, egn, schoolOrUniversity, gradeOrFaculty, specialization, points);
            students.add(student);
        }
    }

    public void displayData() {
        for (Student student : students) {
            student.displayData();
        }
        for (Pupil pupil : pupils) {
            pupil.displayData();
        }
    }

    public void showAllData() {
        System.out.println("All Participants Data:");
        for (Student student : students) {
            System.out.println("Name: " + student.getName());
            System.out.println("EGN: " + student.getEgn());
            System.out.println("University: " + student.getUniversity());
            System.out.println("Faculty: " + student.getFaculty());
            System.out.println("Specialization: " + student.getSpecialization());
            System.out.println("Points: " + student.getPoints());
            System.out.println("----------------------------");
        }
        for (Pupil pupil : pupils) {
            System.out.println("Name: " + pupil.getName());
            System.out.println("EGN: " + pupil.getEgn());
            System.out.println("School: " + pupil.getSchool());
            System.out.println("Grade: " + pupil.getGrade());
            System.out.println("Points: " + pupil.getPoints());
            System.out.println("----------------------------");
        }
    }

    public void showStudentDataByUniversityAndPoints(String university, int points) {
        System.out.println("Student Data from " + university + " with more than " + points + " points:");
        for (Student student : students) {
            if (student.getUniversity().equals(university) && student.getPoints() > points) {
                System.out.println("Name: " + student.getName());
                System.out.println("EGN: " + student.getEgn());
                System.out.println("Faculty: " + student.getFaculty());
                System.out.println("Specialization: " + student.getSpecialization());
                System.out.println("Points: " + student.getPoints());
                System.out.println("----------------------------");
            }
        }
    }

    public List<Pupil> getPupilsByCity(String city) {
        List<Pupil> pupilsByCity = new ArrayList<Pupil>();
        for (Pupil pupil : pupils) {
            if (pupil.getCity().equals(city)) {
                pupilsByCity.add(pupil);
            }
        }
        return pupilsByCity;
    }

    public void removePupilByGrade(String grade) {
        for (int i = 0; i < pupils.size(); i++) {
            if (pupils.get(i).getGrade().equals(grade)) {
                pupils.remove(i);
                i--;
            }
        }
    }

    public void removeStudentByUniversity(String university) {
        for (int i = 0; i < students.size(); i++) {
            if (students.get(i).getUniversity().equals(university)) {
                students.remove(i);
                i--;
            }
        }
    }

    public List<Object> getParticipantsByPoints(int points) {
        List<Object> participants = new ArrayList<>();
        for (Student student : students) {
            if (student.getPoints() > points) {
                participants.add(student);
            }
        }
        for (Pupil pupil : pupils) {
            if (pupil.getPoints()) {
                participants.add(pupil);
            }
        }
        return participants;
    }

    public void getStudentsByUniversityAndPoints(String university, int points) {
    }

    public void addPupil(String name, String egn, String school, String grade, int points) {
    }

    public void showData() {
    }

    public void addStudent(String name, String egn, String university, String faculty, String specialty, int points) {

    }
}






class Pupil {
    private String name;
    private String egn;
    private String school;
    private String grade;
    private int points;

    public Pupil(String name, String egn, String school, String grade, int points) {
        this.name = name;
        this.egn = egn;
        this.school = school;
        this.grade = grade;
        this.points = points;
    }

    public Pupil(String name, String egn) {
        this.name = name;
        this.egn = egn;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEgn() {
        return egn;
    }

    public void setEgn(String egn) {
        this.egn = egn;
    }

    public String getSchool() {
        return school;
    }

    public void setSchool(String school) {
        this.school = school;
    }

    public void displayData() {
    }

    public boolean getPoints() {
        return Boolean.parseBoolean(null);
    }

    public String getGrade() {
        return null;
    }

    public Object getCity() {
        return null;
    }

    public class pupil {
        private String name;
        private String egn;
        private String school;
        private String grade;
        private int points;

        public pupil(String name, String egn, String school, String grade, int points) {
            this.name = name;
            this.egn = egn;
            this.school = school;
            this.grade = grade;
            this.points = points;
        }

        public pupil(String name, String egn) {
            this.name = name;
            this.egn = egn;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getEgn() {
            return egn;
        }

        public void setEgn(String egn) {
            this.egn = egn;
        }

        public String getSchool() {
            return school;
        }

        public void setSchool(String school) {
            this.school = school;
        }

        public String getGrade() {
            return grade;
        }

        public void setGrade(String grade) {
            this.grade = grade;
        }

        public int getPoints() {
            return points;
        }

        public void setPoints(int points) {
            this.points = points;
        }

        public void displayData() {
            System.out.println("Name: " + name);
            System.out.println("EGN: " + egn);
            System.out.println("School: " + school);
            System.out.println("Grade: " + grade);
            System.out.println("Points: " + points);
        }
    }
}










class Student {
    private String name;
    private String egn;
    private String university;
    private String faculty;
    private String specialization;
    private int points;

    public Student(String name, String egn, String university, String faculty, String specialization, int points) {
        this.name = name;
        this.egn = egn;
        this.university = university;
        this.faculty = faculty;
        this.specialization = specialization;
        this.points = points;
    }

    public Student(String name, String egn) {
        this.name = "";
        this.egn = "";
        this.university = university;
        this.faculty = faculty;
        this.specialization = specialization;
        this.points = points;
    }



    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEgn() {
        return egn;
    }

    public void setEgn(String egn) {
        this.egn = egn;
    }

    public String getUniversity() {
        return university;
    }

    public void setUniversity(String university) {
        this.university = university;
    }

    public String getFaculty() {
        return faculty;
    }

    public void setFaculty(String faculty) {
        this.faculty = faculty;
    }

    public String getSpecialization() {
        return specialization;
    }

    public void setSpecialization(String specialization) {
        this.specialization = specialization;
    }

    public int getPoints() {
        return points;
    }

    public void setPoints(int points) {
        this.points = points;
    }

    public void displayData() {
        System.out.println("Name: " + name);
        System.out.println("EGN: " + egn);
        System.out.println("University: " + university);
        System.out.println("Faculty: " + faculty);
        System.out.println("Specialization: " + specialization);
        System.out.println("Points: " + points);
    }
}

